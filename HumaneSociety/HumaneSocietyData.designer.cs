#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumaneSociety
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class HumaneSocietyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertAdoptionLog(AdoptionLog instance);
    partial void UpdateAdoptionLog(AdoptionLog instance);
    partial void DeleteAdoptionLog(AdoptionLog instance);
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    #endregion
		
		public HumaneSocietyDataDataContext() : 
				base(global::HumaneSociety.Properties.Settings.Default.HumaneSocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<AdoptionLog> AdoptionLogs
		{
			get
			{
				return this.GetTable<AdoptionLog>();
			}
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _CustomerName;
		
		private System.Nullable<int> _CustomerAge;
		
		private string _CustomerLikeAnimalType;
		
		private string _CustomerLikeAnimalBreed;
		
		private string _CustomerDislikeAnimalType;
		
		private bool _IsEligibleToAdopt;
		
		private EntitySet<AdoptionLog> _AdoptionLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerAgeChanging(System.Nullable<int> value);
    partial void OnCustomerAgeChanged();
    partial void OnCustomerLikeAnimalTypeChanging(string value);
    partial void OnCustomerLikeAnimalTypeChanged();
    partial void OnCustomerLikeAnimalBreedChanging(string value);
    partial void OnCustomerLikeAnimalBreedChanged();
    partial void OnCustomerDislikeAnimalTypeChanging(string value);
    partial void OnCustomerDislikeAnimalTypeChanged();
    partial void OnIsEligibleToAdoptChanging(bool value);
    partial void OnIsEligibleToAdoptChanged();
    #endregion
		
		public Customer()
		{
			this._AdoptionLogs = new EntitySet<AdoptionLog>(new Action<AdoptionLog>(this.attach_AdoptionLogs), new Action<AdoptionLog>(this.detach_AdoptionLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAge", DbType="Int")]
		public System.Nullable<int> CustomerAge
		{
			get
			{
				return this._CustomerAge;
			}
			set
			{
				if ((this._CustomerAge != value))
				{
					this.OnCustomerAgeChanging(value);
					this.SendPropertyChanging();
					this._CustomerAge = value;
					this.SendPropertyChanged("CustomerAge");
					this.OnCustomerAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLikeAnimalType", DbType="VarChar(50)")]
		public string CustomerLikeAnimalType
		{
			get
			{
				return this._CustomerLikeAnimalType;
			}
			set
			{
				if ((this._CustomerLikeAnimalType != value))
				{
					this.OnCustomerLikeAnimalTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerLikeAnimalType = value;
					this.SendPropertyChanged("CustomerLikeAnimalType");
					this.OnCustomerLikeAnimalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLikeAnimalBreed", DbType="VarChar(50)")]
		public string CustomerLikeAnimalBreed
		{
			get
			{
				return this._CustomerLikeAnimalBreed;
			}
			set
			{
				if ((this._CustomerLikeAnimalBreed != value))
				{
					this.OnCustomerLikeAnimalBreedChanging(value);
					this.SendPropertyChanging();
					this._CustomerLikeAnimalBreed = value;
					this.SendPropertyChanged("CustomerLikeAnimalBreed");
					this.OnCustomerLikeAnimalBreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDislikeAnimalType", DbType="VarChar(50)")]
		public string CustomerDislikeAnimalType
		{
			get
			{
				return this._CustomerDislikeAnimalType;
			}
			set
			{
				if ((this._CustomerDislikeAnimalType != value))
				{
					this.OnCustomerDislikeAnimalTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerDislikeAnimalType = value;
					this.SendPropertyChanged("CustomerDislikeAnimalType");
					this.OnCustomerDislikeAnimalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEligibleToAdopt", DbType="Bit NOT NULL")]
		public bool IsEligibleToAdopt
		{
			get
			{
				return this._IsEligibleToAdopt;
			}
			set
			{
				if ((this._IsEligibleToAdopt != value))
				{
					this.OnIsEligibleToAdoptChanging(value);
					this.SendPropertyChanging();
					this._IsEligibleToAdopt = value;
					this.SendPropertyChanged("IsEligibleToAdopt");
					this.OnIsEligibleToAdoptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_AdoptionLog", Storage="_AdoptionLogs", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<AdoptionLog> AdoptionLogs
		{
			get
			{
				return this._AdoptionLogs;
			}
			set
			{
				this._AdoptionLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdoptionLogs(AdoptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_AdoptionLogs(AdoptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdoptionLog")]
	public partial class AdoptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _AnimalID;
		
		private System.Nullable<int> _Profit;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnAnimalIDChanging(System.Nullable<int> value);
    partial void OnAnimalIDChanged();
    partial void OnProfitChanging(System.Nullable<int> value);
    partial void OnProfitChanged();
    #endregion
		
		public AdoptionLog()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalID", DbType="Int")]
		public System.Nullable<int> AnimalID
		{
			get
			{
				return this._AnimalID;
			}
			set
			{
				if ((this._AnimalID != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalIDChanging(value);
					this.SendPropertyChanging();
					this._AnimalID = value;
					this.SendPropertyChanged("AnimalID");
					this.OnAnimalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Int")]
		public System.Nullable<int> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_AdoptionLog", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.AdoptionLogs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.AdoptionLogs.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_AdoptionLog", Storage="_Animal", ThisKey="AnimalID", OtherKey="AnimalID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.AdoptionLogs.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.AdoptionLogs.Add(this);
						this._AnimalID = value.AnimalID;
					}
					else
					{
						this._AnimalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnimalID;
		
		private string _AnimalName;
		
		private System.Nullable<int> _AnimalAge;
		
		private string _AnimalType;
		
		private string _Breed;
		
		private string _Room;
		
		private System.Nullable<int> _FoodBowlsNeeded;
		
		private string _LastVaccineShot;
		
		private System.Nullable<int> _Price;
		
		private bool _IsAdopted;
		
		private EntitySet<AdoptionLog> _AdoptionLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimalIDChanging(int value);
    partial void OnAnimalIDChanged();
    partial void OnAnimalNameChanging(string value);
    partial void OnAnimalNameChanged();
    partial void OnAnimalAgeChanging(System.Nullable<int> value);
    partial void OnAnimalAgeChanged();
    partial void OnAnimalTypeChanging(string value);
    partial void OnAnimalTypeChanged();
    partial void OnBreedChanging(string value);
    partial void OnBreedChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnFoodBowlsNeededChanging(System.Nullable<int> value);
    partial void OnFoodBowlsNeededChanged();
    partial void OnLastVaccineShotChanging(string value);
    partial void OnLastVaccineShotChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnIsAdoptedChanging(bool value);
    partial void OnIsAdoptedChanged();
    #endregion
		
		public Animal()
		{
			this._AdoptionLogs = new EntitySet<AdoptionLog>(new Action<AdoptionLog>(this.attach_AdoptionLogs), new Action<AdoptionLog>(this.detach_AdoptionLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnimalID
		{
			get
			{
				return this._AnimalID;
			}
			set
			{
				if ((this._AnimalID != value))
				{
					this.OnAnimalIDChanging(value);
					this.SendPropertyChanging();
					this._AnimalID = value;
					this.SendPropertyChanged("AnimalID");
					this.OnAnimalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalName", DbType="VarChar(50)")]
		public string AnimalName
		{
			get
			{
				return this._AnimalName;
			}
			set
			{
				if ((this._AnimalName != value))
				{
					this.OnAnimalNameChanging(value);
					this.SendPropertyChanging();
					this._AnimalName = value;
					this.SendPropertyChanged("AnimalName");
					this.OnAnimalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalAge", DbType="Int")]
		public System.Nullable<int> AnimalAge
		{
			get
			{
				return this._AnimalAge;
			}
			set
			{
				if ((this._AnimalAge != value))
				{
					this.OnAnimalAgeChanging(value);
					this.SendPropertyChanging();
					this._AnimalAge = value;
					this.SendPropertyChanged("AnimalAge");
					this.OnAnimalAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalType", DbType="VarChar(50)")]
		public string AnimalType
		{
			get
			{
				return this._AnimalType;
			}
			set
			{
				if ((this._AnimalType != value))
				{
					this.OnAnimalTypeChanging(value);
					this.SendPropertyChanging();
					this._AnimalType = value;
					this.SendPropertyChanged("AnimalType");
					this.OnAnimalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breed", DbType="VarChar(50)")]
		public string Breed
		{
			get
			{
				return this._Breed;
			}
			set
			{
				if ((this._Breed != value))
				{
					this.OnBreedChanging(value);
					this.SendPropertyChanging();
					this._Breed = value;
					this.SendPropertyChanged("Breed");
					this.OnBreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(50)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodBowlsNeeded", DbType="Int")]
		public System.Nullable<int> FoodBowlsNeeded
		{
			get
			{
				return this._FoodBowlsNeeded;
			}
			set
			{
				if ((this._FoodBowlsNeeded != value))
				{
					this.OnFoodBowlsNeededChanging(value);
					this.SendPropertyChanging();
					this._FoodBowlsNeeded = value;
					this.SendPropertyChanged("FoodBowlsNeeded");
					this.OnFoodBowlsNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVaccineShot", DbType="VarChar(50)")]
		public string LastVaccineShot
		{
			get
			{
				return this._LastVaccineShot;
			}
			set
			{
				if ((this._LastVaccineShot != value))
				{
					this.OnLastVaccineShotChanging(value);
					this.SendPropertyChanging();
					this._LastVaccineShot = value;
					this.SendPropertyChanged("LastVaccineShot");
					this.OnLastVaccineShotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdopted", DbType="Bit NOT NULL")]
		public bool IsAdopted
		{
			get
			{
				return this._IsAdopted;
			}
			set
			{
				if ((this._IsAdopted != value))
				{
					this.OnIsAdoptedChanging(value);
					this.SendPropertyChanging();
					this._IsAdopted = value;
					this.SendPropertyChanged("IsAdopted");
					this.OnIsAdoptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_AdoptionLog", Storage="_AdoptionLogs", ThisKey="AnimalID", OtherKey="AnimalID")]
		public EntitySet<AdoptionLog> AdoptionLogs
		{
			get
			{
				return this._AdoptionLogs;
			}
			set
			{
				this._AdoptionLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdoptionLogs(AdoptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_AdoptionLogs(AdoptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
}
#pragma warning restore 1591
